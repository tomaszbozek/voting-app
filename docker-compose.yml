# docker-compose v1.27+ required

services:
  result:
    build: ./result
    # use nodemon rather than node for local dev
    entrypoint: nodemon --inspect=0.0.0.0 server.js
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./result:/usr/local/app
    ports:
      - "5001:80"
      - "127.0.0.1:9229:9229"
    networks:
      - front-tier
      - back-tier
  vote:
    build: 
      context: ./vote-ui-api
    depends_on:
      redis:
        condition: service_healthy
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
     - ./vote:/usr/local/app
    ports:
      - "8080:8080"
    environment:
      - SPRING_REDIS_HOST=redis
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./vote-worker-service
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy
    volumes:
      - ./worker:/usr/local/app
    #TODO FIXME: worker won't be visible in the future from inside of the application
    ports:
      - "8081:8081"
    environment:
      - SPRING_REDIS_HOST=redis
    networks:
      - back-tier

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
